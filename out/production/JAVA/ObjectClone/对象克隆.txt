    当拷贝一个变量时，原始变量和拷贝变量引用同一个对象，故改变一个变量所引用的对象将会对另一个变量产生影响。

    如果创建一个对象的新的copy，它的最初状态与original一样，但以后将可以改变各自的状态，那就需要使用clone方法。
    clone方法是Object类的一个protected方法，也就是说，用户自己编写的方法中不能直接调用它。
    查看Object类实现的clone方法。由于这个类对具体的类对象一无所知，所以只能将各个域进行对应的拷贝。如果对象中的所有数据域都属于数值
或者基本数据类型，这样拷贝域没有任何问题。但是，如果在对象中包含了对子对象的引用，拷贝的结果会使得两个域引用同一个子对象，因此原始对象
和子对象共享这一部分信息。默认的克隆是浅拷贝它并没有克隆包含在对象中的内部对象。
    如果原始对象和浅克隆对象共享的子对象是不可变的，将不会产生任何问题。
    例如：子对象属于String类这样的不允许改变的类；也有可能子对象在其生命周期中不会发生变化，既没有更改他们的方法，也没有创建对他引用
的方法。
    如果子对象是可变的，就必须重新定义clone方法，以便实现克隆子对象的深拷贝。